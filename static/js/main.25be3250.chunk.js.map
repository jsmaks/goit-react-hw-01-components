{"version":3,"sources":["components/Profile/Profile.jsx","components/Statistical/Statistical.jsx","components/Friends/Friends.jsx","components/Transactions/TransactionHistory.jsx","App.js","index.js"],"names":["Profile","avatar","name","tag","location","stats","followers","views","likes","className","src","alt","width","randomColor","col","Math","round","random","r","toString","g","d","Statistical","title","map","id","label","percentage","style","backgroundColor","defaultProps","FriendList","friends","isOnline","status","TransactionHistory","items","el","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25be3250.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './Profile.css'\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  const { followers, views, likes } = stats;\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt={name} width=\"360\" className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport './Statistical.css';\r\n\r\nfunction randomColor() {\r\n  let col = Math.round(255.0 * Math.random());\r\n  let r = col.toString(16);\r\n  col = Math.round(255.0 * Math.random());\r\n  let g = col.toString(16);\r\n  col = Math.round(255.0 * Math.random());\r\n  let d = col.toString(16);\r\n  col = r + g + d;\r\n  return col;\r\n}\r\n\r\nconst Statistical = ({ title, stats }) => {\r\n  // const titleName = title ? <h2 className=\"title\">{title}</h2> : null;\r\n  return (\r\n    <section className=\"statistics\">\r\n      <div className=\"statistics-container\">\r\n        {title && <h2 className=\"title\">{title}</h2>}\r\n        <ul className=\"stat-list\">\r\n          {stats.map(({ id, label, percentage }) => (\r\n            <li\r\n              className=\"stat-list__item\"\r\n              key={id}\r\n              style={{ backgroundColor: `#${randomColor()}` }}\r\n            >\r\n              <span className=\"label\">{label}</span>\r\n              <span className=\"percentage\">{percentage}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nStatistical.defaultProps = {\r\n  title: '',\r\n};\r\nStatistical.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistical;\r\n","import PropTypes from 'prop-types';\r\nimport './Friends.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <div className=\"friends\">\r\n      <ul className=\"friend-list\">\r\n        {friends.map(({ id, isOnline, avatar, name }) => (\r\n          <li className=\"item\" key={id}>\r\n            <span className=\"status\" status={isOnline ? 'true' : 'false'}>\r\n              <div\r\n                className=\"status-color\"\r\n                style={\r\n                  isOnline\r\n                    ? { backgroundColor: 'green' }\r\n                    : { backgroundColor: 'red' }\r\n                }\r\n              ></div>\r\n            </span>\r\n            <img className=\"avatar\" src={avatar} alt=\"\" width=\"88\" />\r\n            <p className=\"name\">{name}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport './Transaction.css'\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <div className=\"transactions\">\r\n      <table className=\"transaction-history\">\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map(el => (\r\n            <tr key={el.id}>\r\n              <td>{el.type}</td>\r\n              <td>{el.amount}</td>\r\n              <td>{el.currency}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n\r\n  }))\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Profile from './components/Profile/Profile';\r\nimport user from './user.json';\r\n\r\nimport Statistical from './components/Statistical/Statistical';\r\nimport statisticalData from './stasistical-data.json';\r\n\r\nimport FriendList from './components/Friends/Friends';\r\nimport friends from './friends.json';\r\n\r\nimport TransactionHistory from './components/Transactions/TransactionHistory';\r\nimport transactions from './transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistical \r\n      title=\"Upload stats\" \r\n      stats={statisticalData} \r\n      />\r\n      <FriendList \r\n      friends={friends} \r\n      />\r\n      <TransactionHistory \r\n      items={transactions} \r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css'\n// import ReactDOM from 'react-dom';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}